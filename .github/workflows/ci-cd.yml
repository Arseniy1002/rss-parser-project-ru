# .github/workflows/ci-cd.yml
name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DOCKER_IMAGE_NAME: your-dockerhub-username/rss_parser # Замени на свой логин
  WEB_IMAGE_NAME: your-dockerhub-username/rss_web_app   # Замени на свой логин

jobs:
  build_and_publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install

      - name: Install NLTK resources
        run: |
          poetry run python -c "import nltk; nltk.download('wordnet'); nltk.download('stopwords'); nltk.download('omw-1.4')"

      - name: Run tests with pytest
        run: |
          poetry run pytest

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build processor image
        run: |
          docker build -t ${{ env.DOCKER_IMAGE_NAME }}:latest -t ${{ env.DOCKER_IMAGE_NAME }}:${{ github.run_number }} .
      
      - name: Build web image
        run: |
          docker build -t ${{ env.WEB_IMAGE_NAME }}:latest -t ${{ env.WEB_IMAGE_NAME }}:${{ github.run_number }} -f web/Dockerfile.web .
      
      - name: Push processor image
        run: |
          docker push ${{ env.DOCKER_IMAGE_NAME }}:latest
          docker push ${{ env.DOCKER_IMAGE_NAME }}:${{ github.run_number }}

      - name: Push web image
        run: |
          docker push ${{ env.WEB_IMAGE_NAME }}:latest
          docker push ${{ env.WEB_IMAGE_NAME }}:${{ github.run_number }}